//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-22781540
// Cuda compilation tools, release 9.0, V9.0.176
// Based on LLVM 3.4svn
//

.version 6.0
.target sm_61
.address_size 64

	// .globl	_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2_
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .entry _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2_(
	.param .align 4 .b8 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_0[12],
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_1,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_2,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_3,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_4,
	.param .u32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_5,
	.param .u32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_6,
	.param .u32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_7,
	.param .f32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_8,
	.param .f32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_9,
	.param .f32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10,
	.param .f32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_11,
	.param .u32 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_12,
	.param .u8 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_13,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_14,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_15,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_16,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_17,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_18,
	.param .u64 _Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_19
)
{
	.local .align 4 .b8 	__local_depot0[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<250>;
	.reg .b16 	%rs<4>;
	.reg .f32 	%f<265>;
	.reg .b32 	%r<541>;
	.reg .f64 	%fd<470>;
	.reg .b64 	%rd<171>;


	mov.u64 	%rd170, __local_depot0;
	cvta.local.u64 	%SP, %rd170;
	ld.param.u64 	%rd29, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_1];
	ld.param.u64 	%rd30, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_2];
	ld.param.u64 	%rd34, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_3];
	ld.param.u32 	%r156, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_5];
	ld.param.u32 	%r157, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_6];
	ld.param.u32 	%r158, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_7];
	ld.param.f32 	%f55, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_9];
	ld.param.f32 	%f51, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	ld.param.u32 	%r159, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_12];
	ld.param.u64 	%rd35, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_14];
	ld.param.u64 	%rd36, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_15];
	ld.param.u64 	%rd37, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_16];
	ld.param.u64 	%rd38, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_17];
	cvta.to.global.u64 	%rd1, %rd37;
	cvta.to.global.u64 	%rd2, %rd38;
	cvta.to.global.u64 	%rd3, %rd36;
	cvta.to.global.u64 	%rd4, %rd35;
	add.u64 	%rd39, %SP, 0;
	cvta.to.local.u64 	%rd5, %rd39;
	cvta.to.global.u64 	%rd40, %rd34;
	ld.global.u32 	%r160, [%rd40];
	cvt.rn.f32.s32	%f56, %r160;
	fma.rn.f32 	%f1, %f56, %f55, 0f3F800000;
	mul.f32 	%f57, %f51, 0fBF000000;
	cvt.rzi.f32.f32	%f58, %f57;
	mul.f32 	%f59, %f58, 0fC0000000;
	neg.f32 	%f2, %f51;
	sub.f32 	%f60, %f59, %f51;
	abs.f32 	%f3, %f60;
	abs.f32 	%f4, %f1;
	setp.lt.f32	%p10, %f4, 0f00800000;
	mul.f32 	%f61, %f4, 0f4B800000;
	selp.f32	%f62, 0fC3170000, 0fC2FE0000, %p10;
	selp.f32	%f63, %f61, %f4, %p10;
	mov.b32 	 %r161, %f63;
	and.b32  	%r162, %r161, 8388607;
	or.b32  	%r163, %r162, 1065353216;
	mov.b32 	 %f64, %r163;
	shr.u32 	%r164, %r161, 23;
	cvt.rn.f32.u32	%f65, %r164;
	add.f32 	%f66, %f62, %f65;
	setp.gt.f32	%p11, %f64, 0f3FB504F3;
	mul.f32 	%f67, %f64, 0f3F000000;
	add.f32 	%f68, %f66, 0f3F800000;
	selp.f32	%f69, %f67, %f64, %p11;
	selp.f32	%f70, %f68, %f66, %p11;
	add.f32 	%f71, %f69, 0fBF800000;
	add.f32 	%f54, %f69, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f53,%f54;
	// inline asm
	add.f32 	%f72, %f71, %f71;
	mul.f32 	%f73, %f53, %f72;
	mul.f32 	%f74, %f73, %f73;
	mov.f32 	%f75, 0f3C4CAF63;
	mov.f32 	%f76, 0f3B18F0FE;
	fma.rn.f32 	%f77, %f76, %f74, %f75;
	mov.f32 	%f78, 0f3DAAAABD;
	fma.rn.f32 	%f79, %f77, %f74, %f78;
	mul.rn.f32 	%f80, %f79, %f74;
	mul.rn.f32 	%f81, %f80, %f73;
	sub.f32 	%f82, %f71, %f73;
	neg.f32 	%f83, %f73;
	add.f32 	%f84, %f82, %f82;
	fma.rn.f32 	%f85, %f83, %f71, %f84;
	mul.rn.f32 	%f86, %f53, %f85;
	add.f32 	%f87, %f81, %f73;
	sub.f32 	%f88, %f73, %f87;
	add.f32 	%f89, %f81, %f88;
	add.f32 	%f90, %f86, %f89;
	add.f32 	%f91, %f87, %f90;
	sub.f32 	%f92, %f87, %f91;
	add.f32 	%f93, %f90, %f92;
	mov.f32 	%f94, 0f3F317200;
	mul.rn.f32 	%f95, %f70, %f94;
	mov.f32 	%f96, 0f35BFBE8E;
	mul.rn.f32 	%f97, %f70, %f96;
	add.f32 	%f98, %f95, %f91;
	sub.f32 	%f99, %f95, %f98;
	add.f32 	%f100, %f91, %f99;
	add.f32 	%f101, %f93, %f100;
	add.f32 	%f102, %f97, %f101;
	add.f32 	%f103, %f98, %f102;
	sub.f32 	%f104, %f98, %f103;
	add.f32 	%f105, %f102, %f104;
	abs.f32 	%f5, %f2;
	setp.gt.f32	%p12, %f5, 0f77F684DF;
	mul.f32 	%f106, %f51, 0fB9000000;
	selp.f32	%f107, %f106, %f2, %p12;
	mul.rn.f32 	%f6, %f107, %f103;
	neg.f32 	%f108, %f6;
	fma.rn.f32 	%f109, %f107, %f103, %f108;
	fma.rn.f32 	%f110, %f107, %f105, %f109;
	mov.f32 	%f111, 0f00000000;
	fma.rn.f32 	%f7, %f111, %f103, %f110;
	add.rn.f32 	%f8, %f6, %f7;
	mov.b32 	 %r165, %f8;
	setp.eq.s32	%p1, %r165, 1118925336;
	add.s32 	%r166, %r165, -1;
	mov.b32 	 %f112, %r166;
	selp.f32	%f113, %f112, %f8, %p1;
	mul.f32 	%f114, %f113, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f115, %f114;
	mov.f32 	%f116, 0fBF317200;
	fma.rn.f32 	%f117, %f115, %f116, %f113;
	mov.f32 	%f118, 0fB5BFBE8E;
	fma.rn.f32 	%f119, %f115, %f118, %f117;
	mul.f32 	%f120, %f119, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f121, %f120;
	add.f32 	%f122, %f115, 0f00000000;
	ex2.approx.f32 	%f123, %f122;
	mul.f32 	%f124, %f121, %f123;
	setp.lt.f32	%p13, %f113, 0fC2D20000;
	selp.f32	%f125, 0f00000000, %f124, %p13;
	setp.gt.f32	%p14, %f113, 0f42D20000;
	selp.f32	%f247, 0f7F800000, %f125, %p14;
	setp.eq.f32	%p15, %f247, 0f7F800000;
	@%p15 bra 	BB0_2;

	neg.f32 	%f126, %f8;
	add.rn.f32 	%f127, %f6, %f126;
	add.rn.f32 	%f128, %f127, %f7;
	add.f32 	%f129, %f128, 0f37000000;
	selp.f32	%f130, %f129, %f128, %p1;
	fma.rn.f32 	%f247, %f247, %f130, %f247;

BB0_2:
	setp.lt.f32	%p16, %f1, 0f00000000;
	setp.eq.f32	%p17, %f3, 0f3F800000;
	and.pred  	%p2, %p16, %p17;
	mov.b32 	 %r167, %f247;
	xor.b32  	%r168, %r167, -2147483648;
	mov.b32 	 %f131, %r168;
	selp.f32	%f249, %f131, %f247, %p2;
	setp.eq.f32	%p18, %f1, 0f00000000;
	@%p18 bra 	BB0_5;
	bra.uni 	BB0_3;

BB0_5:
	ld.param.f32 	%f246, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	add.f32 	%f133, %f1, %f1;
	mov.b32 	 %r169, %f133;
	selp.b32	%r170, %r169, 0, %p17;
	or.b32  	%r171, %r170, 2139095040;
	setp.gt.f32	%p22, %f246, 0f80000000;
	selp.b32	%r172, %r171, %r170, %p22;
	mov.b32 	 %f249, %r172;
	bra.uni 	BB0_6;

BB0_3:
	setp.geu.f32	%p19, %f1, 0f00000000;
	@%p19 bra 	BB0_6;

	ld.param.f32 	%f245, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	neg.f32 	%f244, %f245;
	cvt.rzi.f32.f32	%f132, %f244;
	setp.neu.f32	%p20, %f132, %f244;
	selp.f32	%f249, 0f7FFFFFFF, %f249, %p20;

BB0_6:
	ld.param.f32 	%f230, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	neg.f32 	%f229, %f230;
	abs.f32 	%f228, %f229;
	add.f32 	%f134, %f4, %f228;
	mov.b32 	 %r173, %f134;
	setp.lt.s32	%p23, %r173, 2139095040;
	@%p23 bra 	BB0_13;

	ld.param.f32 	%f237, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	neg.f32 	%f236, %f237;
	abs.f32 	%f235, %f236;
	setp.gtu.f32	%p24, %f4, 0f7F800000;
	setp.gtu.f32	%p25, %f235, 0f7F800000;
	or.pred  	%p26, %p24, %p25;
	@%p26 bra 	BB0_12;
	bra.uni 	BB0_8;

BB0_12:
	ld.param.f32 	%f243, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	sub.f32 	%f249, %f1, %f243;
	bra.uni 	BB0_13;

BB0_8:
	ld.param.f32 	%f240, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	neg.f32 	%f239, %f240;
	abs.f32 	%f238, %f239;
	setp.eq.f32	%p27, %f238, 0f7F800000;
	@%p27 bra 	BB0_11;
	bra.uni 	BB0_9;

BB0_11:
	ld.param.f32 	%f242, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	setp.gt.f32	%p30, %f4, 0f3F800000;
	selp.b32	%r177, 2139095040, 0, %p30;
	xor.b32  	%r178, %r177, 2139095040;
	setp.gt.f32	%p31, %f242, 0f80000000;
	selp.b32	%r179, %r178, %r177, %p31;
	mov.b32 	 %f135, %r179;
	setp.eq.f32	%p32, %f1, 0fBF800000;
	selp.f32	%f249, 0f3F800000, %f135, %p32;
	bra.uni 	BB0_13;

BB0_9:
	setp.neu.f32	%p28, %f4, 0f7F800000;
	@%p28 bra 	BB0_13;

	ld.param.f32 	%f241, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	setp.gtu.f32	%p29, %f241, 0f80000000;
	selp.b32	%r174, 0, 2139095040, %p29;
	or.b32  	%r175, %r174, -2147483648;
	selp.b32	%r176, %r175, %r174, %p2;
	mov.b32 	 %f249, %r176;

BB0_13:
	ld.param.f32 	%f233, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_11];
	ld.param.f32 	%f232, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_8];
	ld.param.u64 	%rd160, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_18];
	ld.param.f32 	%f231, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_10];
	cvta.to.global.u64 	%rd41, %rd160;
	setp.eq.f32	%p33, %f231, 0f80000000;
	setp.eq.f32	%p34, %f1, 0f3F800000;
	or.pred  	%p35, %p34, %p33;
	selp.f32	%f136, 0f3F800000, %f249, %p35;
	mul.f32 	%f137, %f136, %f232;
	max.f32 	%f138, %f137, %f233;
	st.global.f32 	[%rd41], %f138;
	setp.lt.s32	%p36, %r156, 1;
	@%p36 bra 	BB0_42;

	mov.f64 	%fd184, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd184;
	}
	bfe.u32 	%r181, %r1, 20, 11;
	add.s32 	%r182, %r181, -1012;
	mov.u64 	%rd42, 4602678819172646912;
	shl.b64 	%rd6, %rd42, %r182;
	and.b32  	%r2, %r1, 2147483647;
	shr.s32 	%r183, %r1, 31;
	and.b32  	%r184, %r183, -2146435072;
	add.s32 	%r3, %r184, 2146435072;
	or.b32  	%r4, %r3, -2147483648;
	and.b32  	%r5, %r157, 3;
	mov.u32 	%r492, 0;
	bra.uni 	BB0_15;

BB0_36:
	and.b32  	%r202, %r15, 2147483647;
	setp.ne.s32	%p54, %r202, 2146435072;
	@%p54 bra 	BB0_37;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r203, %temp}, %fd1;
	}
	setp.ne.s32	%p55, %r203, 0;
	mov.f64 	%fd420, %fd419;
	@%p55 bra 	BB0_41;

	selp.b32	%r204, %r4, %r3, %p3;
	mov.u32 	%r205, 0;
	mov.b64 	%fd420, {%r205, %r204};
	bra.uni 	BB0_41;

BB0_37:
	mov.f64 	%fd420, %fd419;
	bra.uni 	BB0_41;

BB0_15:
	mul.lo.s32 	%r7, %r492, %r157;
	mov.f32 	%f254, 0f00000000;
	setp.lt.s32	%p37, %r157, 1;
	@%p37 bra 	BB0_25;

	mov.f32 	%f254, 0f00000000;
	mov.u32 	%r495, 0;
	setp.eq.s32	%p38, %r5, 0;
	@%p38 bra 	BB0_22;

	setp.eq.s32	%p39, %r5, 1;
	@%p39 bra 	BB0_21;

	setp.eq.s32	%p40, %r5, 2;
	@%p40 bra 	BB0_20;

	mul.wide.s32 	%rd45, %r7, 4;
	add.s64 	%rd44, %rd29, %rd45;
	// inline asm
	ld.global.nc.f32 %f143, [%rd44];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f144, [%rd44];
	// inline asm
	fma.rn.f32 	%f254, %f143, %f144, 0f00000000;
	mov.u32 	%r495, 1;

BB0_20:
	add.s32 	%r189, %r495, %r7;
	mul.wide.s32 	%rd48, %r189, 4;
	add.s64 	%rd47, %rd29, %rd48;
	// inline asm
	ld.global.nc.f32 %f145, [%rd47];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f146, [%rd47];
	// inline asm
	fma.rn.f32 	%f254, %f145, %f146, %f254;
	add.s32 	%r495, %r495, 1;

BB0_21:
	add.s32 	%r190, %r495, %r7;
	mul.wide.s32 	%rd51, %r190, 4;
	add.s64 	%rd50, %rd29, %rd51;
	// inline asm
	ld.global.nc.f32 %f147, [%rd50];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f148, [%rd50];
	// inline asm
	fma.rn.f32 	%f254, %f147, %f148, %f254;
	add.s32 	%r495, %r495, 1;

BB0_22:
	setp.lt.u32	%p41, %r157, 4;
	@%p41 bra 	BB0_25;

	mad.lo.s32 	%r191, %r157, %r492, %r495;
	mul.wide.s32 	%rd52, %r191, 4;
	add.s64 	%rd166, %rd29, %rd52;

BB0_24:
	// inline asm
	ld.global.nc.f32 %f149, [%rd166];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f150, [%rd166];
	// inline asm
	fma.rn.f32 	%f157, %f149, %f150, %f254;
	add.s64 	%rd56, %rd166, 4;
	// inline asm
	ld.global.nc.f32 %f151, [%rd56];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f152, [%rd56];
	// inline asm
	fma.rn.f32 	%f158, %f151, %f152, %f157;
	add.s64 	%rd58, %rd166, 8;
	// inline asm
	ld.global.nc.f32 %f153, [%rd58];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f154, [%rd58];
	// inline asm
	fma.rn.f32 	%f159, %f153, %f154, %f158;
	add.s64 	%rd60, %rd166, 12;
	// inline asm
	ld.global.nc.f32 %f155, [%rd60];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f156, [%rd60];
	// inline asm
	fma.rn.f32 	%f254, %f155, %f156, %f159;
	add.s64 	%rd166, %rd166, 16;
	add.s32 	%r495, %r495, 4;
	setp.lt.s32	%p42, %r495, %r157;
	@%p42 bra 	BB0_24;

BB0_25:
	cvt.f64.f32	%fd1, %f254;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd1;
	}
	abs.f64 	%fd2, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd184;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd419, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p43, %r15, 0;
	setp.eq.s64	%p44, %rd6, -9223372036854775808;
	and.pred  	%p3, %p43, %p44;
	@!%p3 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_26:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r192}, %fd419;
	}
	xor.b32  	%r193, %r192, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r194, %temp}, %fd419;
	}
	mov.b64 	%fd419, {%r194, %r193};

BB0_27:
	setp.eq.f32	%p45, %f254, 0f00000000;
	@%p45 bra 	BB0_30;
	bra.uni 	BB0_28;

BB0_30:
	setp.lt.s32	%p48, %r1, 0;
	selp.b32	%r195, %r15, 0, %p44;
	or.b32  	%r196, %r195, 2146435072;
	selp.b32	%r197, %r196, %r195, %p48;
	mov.u32 	%r198, 0;
	mov.b64 	%fd419, {%r198, %r197};
	bra.uni 	BB0_31;

BB0_28:
	setp.gt.s32	%p46, %r15, -1;
	@%p46 bra 	BB0_31;

	cvt.rzi.f64.f64	%fd187, %fd184;
	setp.neu.f64	%p47, %fd187, 0d3FE0000000000000;
	selp.f64	%fd419, 0dFFF8000000000000, %fd419, %p47;

BB0_31:
	add.f64 	%fd420, %fd1, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r199}, %fd420;
	}
	and.b32  	%r200, %r199, 2146435072;
	setp.ne.s32	%p50, %r200, 2146435072;
	@%p50 bra 	BB0_32;

	setp.gtu.f64	%p51, %fd2, 0d7FF0000000000000;
	@%p51 bra 	BB0_41;

	setp.ne.s32	%p52, %r2, 2146435072;
	@%p52 bra 	BB0_36;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r201, %temp}, %fd184;
	}
	setp.eq.s32	%p53, %r201, 0;
	@%p53 bra 	BB0_40;
	bra.uni 	BB0_36;

BB0_40:
	setp.lt.s32	%p56, %r1, 0;
	setp.gt.f64	%p57, %fd2, 0d3FF0000000000000;
	selp.b32	%r206, 2146435072, 0, %p57;
	xor.b32  	%r207, %r206, 2146435072;
	selp.b32	%r208, %r207, %r206, %p56;
	setp.eq.f32	%p58, %f254, 0fBF800000;
	selp.b32	%r209, 1072693248, %r208, %p58;
	mov.u32 	%r210, 0;
	mov.b64 	%fd420, {%r210, %r209};
	bra.uni 	BB0_41;

BB0_32:
	mov.f64 	%fd420, %fd419;

BB0_41:
	cvt.rn.f32.f64	%f160, %fd420;
	setp.eq.f32	%p59, %f254, 0f3F800000;
	selp.f32	%f161, 0f3F800000, %f160, %p59;
	mul.wide.s32 	%rd61, %r492, 4;
	add.s64 	%rd62, %rd4, %rd61;
	st.global.f32 	[%rd62], %f161;
	add.s32 	%r492, %r492, 1;
	setp.lt.s32	%p60, %r492, %r156;
	@%p60 bra 	BB0_15;

BB0_42:
	setp.lt.s32	%p61, %r158, 1;
	@%p61 bra 	BB0_73;

	ld.param.s8 	%rs3, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_13];
	and.b32  	%r17, %r157, 3;
	mov.u32 	%r497, 0;
	and.b16  	%rs2, %rs3, 255;
	bra.uni 	BB0_44;

BB0_66:
	and.b32  	%r232, %r27, 2147483647;
	setp.ne.s32	%p80, %r232, 2146435072;
	@%p80 bra 	BB0_67;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r233, %temp}, %fd13;
	}
	setp.ne.s32	%p81, %r233, 0;
	mov.f64 	%fd423, %fd422;
	@%p81 bra 	BB0_71;

	shr.s32 	%r234, %r28, 31;
	and.b32  	%r235, %r234, -2146435072;
	add.s32 	%r236, %r235, 2146435072;
	or.b32  	%r237, %r236, -2147483648;
	selp.b32	%r238, %r237, %r236, %p4;
	mov.u32 	%r239, 0;
	mov.b64 	%fd423, {%r239, %r238};
	bra.uni 	BB0_71;

BB0_67:
	mov.f64 	%fd423, %fd422;
	bra.uni 	BB0_71;

BB0_44:
	mul.lo.s32 	%r19, %r497, %r157;
	mov.f32 	%f259, 0f00000000;
	setp.lt.s32	%p62, %r157, 1;
	@%p62 bra 	BB0_54;

	mov.f32 	%f259, 0f00000000;
	mov.u32 	%r500, 0;
	setp.eq.s32	%p63, %r17, 0;
	@%p63 bra 	BB0_51;

	setp.eq.s32	%p64, %r17, 1;
	@%p64 bra 	BB0_50;

	setp.eq.s32	%p65, %r17, 2;
	@%p65 bra 	BB0_49;

	mul.wide.s32 	%rd65, %r19, 4;
	add.s64 	%rd64, %rd30, %rd65;
	// inline asm
	ld.global.nc.f32 %f166, [%rd64];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f167, [%rd64];
	// inline asm
	fma.rn.f32 	%f259, %f166, %f167, 0f00000000;
	mov.u32 	%r500, 1;

BB0_49:
	add.s32 	%r216, %r500, %r19;
	mul.wide.s32 	%rd68, %r216, 4;
	add.s64 	%rd67, %rd30, %rd68;
	// inline asm
	ld.global.nc.f32 %f168, [%rd67];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f169, [%rd67];
	// inline asm
	fma.rn.f32 	%f259, %f168, %f169, %f259;
	add.s32 	%r500, %r500, 1;

BB0_50:
	add.s32 	%r217, %r500, %r19;
	mul.wide.s32 	%rd71, %r217, 4;
	add.s64 	%rd70, %rd30, %rd71;
	// inline asm
	ld.global.nc.f32 %f170, [%rd70];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f171, [%rd70];
	// inline asm
	fma.rn.f32 	%f259, %f170, %f171, %f259;
	add.s32 	%r500, %r500, 1;

BB0_51:
	setp.lt.u32	%p66, %r157, 4;
	@%p66 bra 	BB0_54;

	mad.lo.s32 	%r218, %r157, %r497, %r500;
	mul.wide.s32 	%rd72, %r218, 4;
	add.s64 	%rd167, %rd30, %rd72;

BB0_53:
	// inline asm
	ld.global.nc.f32 %f172, [%rd167];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f173, [%rd167];
	// inline asm
	fma.rn.f32 	%f180, %f172, %f173, %f259;
	add.s64 	%rd76, %rd167, 4;
	// inline asm
	ld.global.nc.f32 %f174, [%rd76];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f175, [%rd76];
	// inline asm
	fma.rn.f32 	%f181, %f174, %f175, %f180;
	add.s64 	%rd78, %rd167, 8;
	// inline asm
	ld.global.nc.f32 %f176, [%rd78];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f177, [%rd78];
	// inline asm
	fma.rn.f32 	%f182, %f176, %f177, %f181;
	add.s64 	%rd80, %rd167, 12;
	// inline asm
	ld.global.nc.f32 %f178, [%rd80];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f179, [%rd80];
	// inline asm
	fma.rn.f32 	%f259, %f178, %f179, %f182;
	add.s64 	%rd167, %rd167, 16;
	add.s32 	%r500, %r500, 4;
	setp.lt.s32	%p67, %r500, %r157;
	@%p67 bra 	BB0_53;

BB0_54:
	mov.f64 	%fd424, 0d3FF0000000000000;
	setp.ne.s16	%p68, %rs2, 0;
	@%p68 bra 	BB0_72;

	cvt.f64.f32	%fd13, %f259;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd13;
	}
	mov.f64 	%fd190, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd190;
	}
	bfe.u32 	%r219, %r28, 20, 11;
	add.s32 	%r220, %r219, -1012;
	mov.u64 	%rd81, 4602678819172646912;
	shl.b64 	%rd13, %rd81, %r220;
	setp.eq.s64	%p69, %rd13, -9223372036854775808;
	abs.f64 	%fd14, %fd13;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd14;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd190;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd422, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p70, %r27, 0;
	and.pred  	%p4, %p70, %p69;
	@!%p4 bra 	BB0_57;
	bra.uni 	BB0_56;

BB0_56:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r221}, %fd422;
	}
	xor.b32  	%r222, %r221, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r223, %temp}, %fd422;
	}
	mov.b64 	%fd422, {%r223, %r222};

BB0_57:
	setp.eq.f32	%p71, %f259, 0f00000000;
	@%p71 bra 	BB0_60;
	bra.uni 	BB0_58;

BB0_60:
	selp.b32	%r224, %r27, 0, %p69;
	or.b32  	%r225, %r224, 2146435072;
	setp.lt.s32	%p75, %r28, 0;
	selp.b32	%r226, %r225, %r224, %p75;
	mov.u32 	%r227, 0;
	mov.b64 	%fd422, {%r227, %r226};
	bra.uni 	BB0_61;

BB0_58:
	setp.gt.s32	%p72, %r27, -1;
	@%p72 bra 	BB0_61;

	cvt.rzi.f64.f64	%fd192, %fd190;
	setp.neu.f64	%p73, %fd192, 0d3FE0000000000000;
	selp.f64	%fd422, 0dFFF8000000000000, %fd422, %p73;

BB0_61:
	add.f64 	%fd423, %fd13, 0d3FE0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r228}, %fd423;
	}
	and.b32  	%r229, %r228, 2146435072;
	setp.ne.s32	%p76, %r229, 2146435072;
	@%p76 bra 	BB0_62;

	setp.gtu.f64	%p77, %fd14, 0d7FF0000000000000;
	@%p77 bra 	BB0_71;

	and.b32  	%r230, %r28, 2147483647;
	setp.ne.s32	%p78, %r230, 2146435072;
	@%p78 bra 	BB0_66;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r231, %temp}, %fd190;
	}
	setp.eq.s32	%p79, %r231, 0;
	@%p79 bra 	BB0_70;
	bra.uni 	BB0_66;

BB0_70:
	setp.gt.f64	%p82, %fd14, 0d3FF0000000000000;
	selp.b32	%r240, 2146435072, 0, %p82;
	xor.b32  	%r241, %r240, 2146435072;
	setp.lt.s32	%p83, %r28, 0;
	selp.b32	%r242, %r241, %r240, %p83;
	setp.eq.f32	%p84, %f259, 0fBF800000;
	selp.b32	%r243, 1072693248, %r242, %p84;
	mov.u32 	%r244, 0;
	mov.b64 	%fd423, {%r244, %r243};
	bra.uni 	BB0_71;

BB0_62:
	mov.f64 	%fd423, %fd422;

BB0_71:
	setp.eq.f32	%p85, %f259, 0f3F800000;
	selp.f64	%fd424, 0d3FF0000000000000, %fd423, %p85;

BB0_72:
	mul.wide.s32 	%rd82, %r497, 4;
	add.s64 	%rd83, %rd3, %rd82;
	cvt.rn.f32.f64	%f183, %fd424;
	st.global.f32 	[%rd83], %f183;
	add.s32 	%r497, %r497, 1;
	setp.lt.s32	%p86, %r497, %r158;
	@%p86 bra 	BB0_44;

BB0_73:
	setp.lt.s32	%p87, %r159, 1;
	@%p87 bra 	BB0_146;

	cvt.rn.f64.s32	%fd27, %r159;
	and.b32  	%r248, %r159, 3;
	mov.u32 	%r503, 0;
	setp.eq.s32	%p88, %r248, 0;
	@%p88 bra 	BB0_107;

	setp.eq.s32	%p89, %r248, 1;
	@%p89 bra 	BB0_97;

	setp.eq.s32	%p90, %r248, 2;
	@%p90 bra 	BB0_87;

	mov.f64 	%fd194, 0d0000000000000000;
	div.rn.f64 	%fd425, %fd194, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r249}, %fd425;
	}
	and.b32  	%r250, %r249, 2147483647;
	setp.ne.s32	%p91, %r250, 2146435072;
	@%p91 bra 	BB0_80;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r251, %temp}, %fd425;
	}
	setp.ne.s32	%p92, %r251, 0;
	@%p92 bra 	BB0_80;

	mul.rn.f64 	%fd425, %fd425, %fd194;

BB0_80:
	mul.f64 	%fd196, %fd425, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r502, %fd196;
	st.local.u32 	[%rd5], %r502;
	cvt.rn.f64.s32	%fd197, %r502;
	neg.f64 	%fd198, %fd197;
	mov.f64 	%fd199, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd200, %fd198, %fd199, %fd425;
	mov.f64 	%fd201, 0d3C91A62633145C00;
	fma.rn.f64 	%fd202, %fd198, %fd201, %fd200;
	mov.f64 	%fd203, 0d397B839A252049C0;
	fma.rn.f64 	%fd426, %fd198, %fd203, %fd202;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r252}, %fd425;
	}
	and.b32  	%r253, %r252, 2145386496;
	setp.lt.u32	%p93, %r253, 1105199104;
	@%p93 bra 	BB0_82;

	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd425;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd426, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.local.u32 	%r502, [%rd5];

BB0_82:
	add.s32 	%r33, %r502, 1;
	and.b32  	%r254, %r33, 1;
	shl.b32 	%r255, %r254, 3;
	setp.eq.s32	%p94, %r254, 0;
	selp.f64	%fd204, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p94;
	add.s32 	%r256, %r255, 1;
	mul.wide.s32 	%rd85, %r256, 8;
	mov.u64 	%rd86, __cudart_sin_cos_coeffs;
	add.s64 	%rd87, %rd86, %rd85;
	ld.const.f64 	%fd205, [%rd87];
	mul.rn.f64 	%fd34, %fd426, %fd426;
	fma.rn.f64 	%fd206, %fd204, %fd34, %fd205;
	ld.const.f64 	%fd207, [%rd87+8];
	fma.rn.f64 	%fd208, %fd206, %fd34, %fd207;
	ld.const.f64 	%fd209, [%rd87+16];
	fma.rn.f64 	%fd210, %fd208, %fd34, %fd209;
	ld.const.f64 	%fd211, [%rd87+24];
	fma.rn.f64 	%fd212, %fd210, %fd34, %fd211;
	ld.const.f64 	%fd213, [%rd87+32];
	fma.rn.f64 	%fd214, %fd212, %fd34, %fd213;
	ld.const.f64 	%fd215, [%rd87+40];
	fma.rn.f64 	%fd35, %fd214, %fd34, %fd215;
	fma.rn.f64 	%fd427, %fd35, %fd426, %fd426;
	@%p94 bra 	BB0_84;

	mov.f64 	%fd216, 0d3FF0000000000000;
	fma.rn.f64 	%fd427, %fd35, %fd34, %fd216;

BB0_84:
	and.b32  	%r257, %r33, 2;
	setp.eq.s32	%p95, %r257, 0;
	@%p95 bra 	BB0_86;

	mov.f64 	%fd218, 0dBFF0000000000000;
	fma.rn.f64 	%fd427, %fd427, %fd218, %fd194;

BB0_86:
	cvt.rn.f32.f64	%f184, %fd427;
	st.global.f32 	[%rd2], %f184;
	mov.u32 	%r503, 1;

BB0_87:
	cvt.rn.f64.s32	%fd219, %r503;
	mul.f64 	%fd220, %fd219, 0d400921FB54442D18;
	div.rn.f64 	%fd429, %fd220, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r259}, %fd429;
	}
	and.b32  	%r260, %r259, 2147483647;
	setp.ne.s32	%p96, %r260, 2146435072;
	@%p96 bra 	BB0_90;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r261, %temp}, %fd429;
	}
	setp.ne.s32	%p97, %r261, 0;
	@%p97 bra 	BB0_90;

	mov.f64 	%fd221, 0d0000000000000000;
	mul.rn.f64 	%fd429, %fd429, %fd221;

BB0_90:
	mul.f64 	%fd222, %fd429, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r504, %fd222;
	st.local.u32 	[%rd5], %r504;
	cvt.rn.f64.s32	%fd223, %r504;
	neg.f64 	%fd224, %fd223;
	mov.f64 	%fd225, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd226, %fd224, %fd225, %fd429;
	mov.f64 	%fd227, 0d3C91A62633145C00;
	fma.rn.f64 	%fd228, %fd224, %fd227, %fd226;
	mov.f64 	%fd229, 0d397B839A252049C0;
	fma.rn.f64 	%fd430, %fd224, %fd229, %fd228;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r262}, %fd429;
	}
	and.b32  	%r263, %r262, 2145386496;
	setp.lt.u32	%p98, %r263, 1105199104;
	@%p98 bra 	BB0_92;

	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd429;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd430, [retval0+0];
	
	//{
	}// Callseq End 3
	ld.local.u32 	%r504, [%rd5];

BB0_92:
	add.s32 	%r38, %r504, 1;
	and.b32  	%r264, %r38, 1;
	shl.b32 	%r265, %r264, 3;
	setp.eq.s32	%p99, %r264, 0;
	selp.f64	%fd230, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p99;
	add.s32 	%r266, %r265, 1;
	mul.wide.s32 	%rd89, %r266, 8;
	mov.u64 	%rd90, __cudart_sin_cos_coeffs;
	add.s64 	%rd91, %rd90, %rd89;
	ld.const.f64 	%fd231, [%rd91];
	mul.rn.f64 	%fd47, %fd430, %fd430;
	fma.rn.f64 	%fd232, %fd230, %fd47, %fd231;
	ld.const.f64 	%fd233, [%rd91+8];
	fma.rn.f64 	%fd234, %fd232, %fd47, %fd233;
	ld.const.f64 	%fd235, [%rd91+16];
	fma.rn.f64 	%fd236, %fd234, %fd47, %fd235;
	ld.const.f64 	%fd237, [%rd91+24];
	fma.rn.f64 	%fd238, %fd236, %fd47, %fd237;
	ld.const.f64 	%fd239, [%rd91+32];
	fma.rn.f64 	%fd240, %fd238, %fd47, %fd239;
	ld.const.f64 	%fd241, [%rd91+40];
	fma.rn.f64 	%fd48, %fd240, %fd47, %fd241;
	fma.rn.f64 	%fd431, %fd48, %fd430, %fd430;
	@%p99 bra 	BB0_94;

	mov.f64 	%fd242, 0d3FF0000000000000;
	fma.rn.f64 	%fd431, %fd48, %fd47, %fd242;

BB0_94:
	and.b32  	%r267, %r38, 2;
	setp.eq.s32	%p100, %r267, 0;
	@%p100 bra 	BB0_96;

	mov.f64 	%fd243, 0d0000000000000000;
	mov.f64 	%fd244, 0dBFF0000000000000;
	fma.rn.f64 	%fd431, %fd431, %fd244, %fd243;

BB0_96:
	mul.wide.u32 	%rd92, %r503, 4;
	add.s64 	%rd93, %rd2, %rd92;
	cvt.rn.f32.f64	%f185, %fd431;
	st.global.f32 	[%rd93], %f185;
	add.s32 	%r503, %r503, 1;

BB0_97:
	cvt.rn.f64.s32	%fd245, %r503;
	mul.f64 	%fd246, %fd245, 0d400921FB54442D18;
	div.rn.f64 	%fd433, %fd246, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r268}, %fd433;
	}
	and.b32  	%r269, %r268, 2147483647;
	setp.ne.s32	%p101, %r269, 2146435072;
	@%p101 bra 	BB0_100;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r270, %temp}, %fd433;
	}
	setp.ne.s32	%p102, %r270, 0;
	@%p102 bra 	BB0_100;

	mov.f64 	%fd247, 0d0000000000000000;
	mul.rn.f64 	%fd433, %fd433, %fd247;

BB0_100:
	mul.f64 	%fd248, %fd433, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r506, %fd248;
	st.local.u32 	[%rd5], %r506;
	cvt.rn.f64.s32	%fd249, %r506;
	neg.f64 	%fd250, %fd249;
	mov.f64 	%fd251, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd252, %fd250, %fd251, %fd433;
	mov.f64 	%fd253, 0d3C91A62633145C00;
	fma.rn.f64 	%fd254, %fd250, %fd253, %fd252;
	mov.f64 	%fd255, 0d397B839A252049C0;
	fma.rn.f64 	%fd434, %fd250, %fd255, %fd254;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r271}, %fd433;
	}
	and.b32  	%r272, %r271, 2145386496;
	setp.lt.u32	%p103, %r272, 1105199104;
	@%p103 bra 	BB0_102;

	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd433;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd434, [retval0+0];
	
	//{
	}// Callseq End 4
	ld.local.u32 	%r506, [%rd5];

BB0_102:
	add.s32 	%r44, %r506, 1;
	and.b32  	%r273, %r44, 1;
	shl.b32 	%r274, %r273, 3;
	setp.eq.s32	%p104, %r273, 0;
	selp.f64	%fd256, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p104;
	add.s32 	%r275, %r274, 1;
	mul.wide.s32 	%rd95, %r275, 8;
	mov.u64 	%rd96, __cudart_sin_cos_coeffs;
	add.s64 	%rd97, %rd96, %rd95;
	ld.const.f64 	%fd257, [%rd97];
	mul.rn.f64 	%fd60, %fd434, %fd434;
	fma.rn.f64 	%fd258, %fd256, %fd60, %fd257;
	ld.const.f64 	%fd259, [%rd97+8];
	fma.rn.f64 	%fd260, %fd258, %fd60, %fd259;
	ld.const.f64 	%fd261, [%rd97+16];
	fma.rn.f64 	%fd262, %fd260, %fd60, %fd261;
	ld.const.f64 	%fd263, [%rd97+24];
	fma.rn.f64 	%fd264, %fd262, %fd60, %fd263;
	ld.const.f64 	%fd265, [%rd97+32];
	fma.rn.f64 	%fd266, %fd264, %fd60, %fd265;
	ld.const.f64 	%fd267, [%rd97+40];
	fma.rn.f64 	%fd61, %fd266, %fd60, %fd267;
	fma.rn.f64 	%fd435, %fd61, %fd434, %fd434;
	@%p104 bra 	BB0_104;

	mov.f64 	%fd268, 0d3FF0000000000000;
	fma.rn.f64 	%fd435, %fd61, %fd60, %fd268;

BB0_104:
	and.b32  	%r276, %r44, 2;
	setp.eq.s32	%p105, %r276, 0;
	@%p105 bra 	BB0_106;

	mov.f64 	%fd269, 0d0000000000000000;
	mov.f64 	%fd270, 0dBFF0000000000000;
	fma.rn.f64 	%fd435, %fd435, %fd270, %fd269;

BB0_106:
	mul.wide.s32 	%rd98, %r503, 4;
	add.s64 	%rd99, %rd2, %rd98;
	cvt.rn.f32.f64	%f186, %fd435;
	st.global.f32 	[%rd99], %f186;
	add.s32 	%r503, %r503, 1;

BB0_107:
	setp.lt.u32	%p106, %r159, 4;
	@%p106 bra 	BB0_146;

	mul.wide.s32 	%rd100, %r503, 4;
	add.s64 	%rd168, %rd2, %rd100;

BB0_109:
	cvt.rn.f64.s32	%fd271, %r503;
	mul.f64 	%fd272, %fd271, 0d400921FB54442D18;
	div.rn.f64 	%fd437, %fd272, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r277}, %fd437;
	}
	and.b32  	%r278, %r277, 2147483647;
	setp.ne.s32	%p107, %r278, 2146435072;
	@%p107 bra 	BB0_112;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r279, %temp}, %fd437;
	}
	setp.ne.s32	%p108, %r279, 0;
	@%p108 bra 	BB0_112;

	mov.f64 	%fd273, 0d0000000000000000;
	mul.rn.f64 	%fd437, %fd437, %fd273;

BB0_112:
	mul.f64 	%fd274, %fd437, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r509, %fd274;
	st.local.u32 	[%rd5], %r509;
	cvt.rn.f64.s32	%fd275, %r509;
	neg.f64 	%fd276, %fd275;
	mov.f64 	%fd277, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd278, %fd276, %fd277, %fd437;
	mov.f64 	%fd279, 0d3C91A62633145C00;
	fma.rn.f64 	%fd280, %fd276, %fd279, %fd278;
	mov.f64 	%fd281, 0d397B839A252049C0;
	fma.rn.f64 	%fd438, %fd276, %fd281, %fd280;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r280}, %fd437;
	}
	and.b32  	%r281, %r280, 2145386496;
	setp.lt.u32	%p109, %r281, 1105199104;
	@%p109 bra 	BB0_114;

	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd437;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd438, [retval0+0];
	
	//{
	}// Callseq End 5
	ld.local.u32 	%r509, [%rd5];

BB0_114:
	add.s32 	%r51, %r509, 1;
	and.b32  	%r282, %r51, 1;
	shl.b32 	%r283, %r282, 3;
	setp.eq.s32	%p110, %r282, 0;
	selp.f64	%fd282, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p110;
	add.s32 	%r284, %r283, 1;
	mul.wide.s32 	%rd102, %r284, 8;
	mov.u64 	%rd103, __cudart_sin_cos_coeffs;
	add.s64 	%rd104, %rd103, %rd102;
	ld.const.f64 	%fd283, [%rd104];
	mul.rn.f64 	%fd73, %fd438, %fd438;
	fma.rn.f64 	%fd284, %fd282, %fd73, %fd283;
	ld.const.f64 	%fd285, [%rd104+8];
	fma.rn.f64 	%fd286, %fd284, %fd73, %fd285;
	ld.const.f64 	%fd287, [%rd104+16];
	fma.rn.f64 	%fd288, %fd286, %fd73, %fd287;
	ld.const.f64 	%fd289, [%rd104+24];
	fma.rn.f64 	%fd290, %fd288, %fd73, %fd289;
	ld.const.f64 	%fd291, [%rd104+32];
	fma.rn.f64 	%fd292, %fd290, %fd73, %fd291;
	ld.const.f64 	%fd293, [%rd104+40];
	fma.rn.f64 	%fd74, %fd292, %fd73, %fd293;
	fma.rn.f64 	%fd439, %fd74, %fd438, %fd438;
	@%p110 bra 	BB0_116;

	mov.f64 	%fd294, 0d3FF0000000000000;
	fma.rn.f64 	%fd439, %fd74, %fd73, %fd294;

BB0_116:
	and.b32  	%r285, %r51, 2;
	setp.eq.s32	%p111, %r285, 0;
	@%p111 bra 	BB0_118;

	mov.f64 	%fd295, 0d0000000000000000;
	mov.f64 	%fd296, 0dBFF0000000000000;
	fma.rn.f64 	%fd439, %fd439, %fd296, %fd295;

BB0_118:
	cvt.rn.f32.f64	%f187, %fd439;
	st.global.f32 	[%rd168], %f187;
	add.s32 	%r52, %r503, 1;
	cvt.rn.f64.s32	%fd297, %r52;
	mul.f64 	%fd298, %fd297, 0d400921FB54442D18;
	div.rn.f64 	%fd441, %fd298, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r286}, %fd441;
	}
	and.b32  	%r287, %r286, 2147483647;
	setp.ne.s32	%p112, %r287, 2146435072;
	@%p112 bra 	BB0_121;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r288, %temp}, %fd441;
	}
	setp.ne.s32	%p113, %r288, 0;
	@%p113 bra 	BB0_121;

	mov.f64 	%fd299, 0d0000000000000000;
	mul.rn.f64 	%fd441, %fd441, %fd299;

BB0_121:
	mul.f64 	%fd300, %fd441, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r510, %fd300;
	st.local.u32 	[%rd5], %r510;
	cvt.rn.f64.s32	%fd301, %r510;
	neg.f64 	%fd302, %fd301;
	fma.rn.f64 	%fd304, %fd302, %fd277, %fd441;
	fma.rn.f64 	%fd306, %fd302, %fd279, %fd304;
	fma.rn.f64 	%fd442, %fd302, %fd281, %fd306;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r289}, %fd441;
	}
	and.b32  	%r290, %r289, 2145386496;
	setp.lt.u32	%p114, %r290, 1105199104;
	@%p114 bra 	BB0_123;

	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd441;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd442, [retval0+0];
	
	//{
	}// Callseq End 6
	ld.local.u32 	%r510, [%rd5];

BB0_123:
	add.s32 	%r56, %r510, 1;
	and.b32  	%r291, %r56, 1;
	shl.b32 	%r292, %r291, 3;
	setp.eq.s32	%p115, %r291, 0;
	selp.f64	%fd308, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p115;
	add.s32 	%r293, %r292, 1;
	mul.wide.s32 	%rd106, %r293, 8;
	add.s64 	%rd108, %rd103, %rd106;
	ld.const.f64 	%fd309, [%rd108];
	mul.rn.f64 	%fd86, %fd442, %fd442;
	fma.rn.f64 	%fd310, %fd308, %fd86, %fd309;
	ld.const.f64 	%fd311, [%rd108+8];
	fma.rn.f64 	%fd312, %fd310, %fd86, %fd311;
	ld.const.f64 	%fd313, [%rd108+16];
	fma.rn.f64 	%fd314, %fd312, %fd86, %fd313;
	ld.const.f64 	%fd315, [%rd108+24];
	fma.rn.f64 	%fd316, %fd314, %fd86, %fd315;
	ld.const.f64 	%fd317, [%rd108+32];
	fma.rn.f64 	%fd318, %fd316, %fd86, %fd317;
	ld.const.f64 	%fd319, [%rd108+40];
	fma.rn.f64 	%fd87, %fd318, %fd86, %fd319;
	fma.rn.f64 	%fd443, %fd87, %fd442, %fd442;
	@%p115 bra 	BB0_125;

	mov.f64 	%fd320, 0d3FF0000000000000;
	fma.rn.f64 	%fd443, %fd87, %fd86, %fd320;

BB0_125:
	and.b32  	%r294, %r56, 2;
	setp.eq.s32	%p116, %r294, 0;
	@%p116 bra 	BB0_127;

	mov.f64 	%fd321, 0d0000000000000000;
	mov.f64 	%fd322, 0dBFF0000000000000;
	fma.rn.f64 	%fd443, %fd443, %fd322, %fd321;

BB0_127:
	cvt.rn.f32.f64	%f188, %fd443;
	st.global.f32 	[%rd168+4], %f188;
	add.s32 	%r57, %r52, 1;
	cvt.rn.f64.s32	%fd323, %r57;
	mul.f64 	%fd324, %fd323, 0d400921FB54442D18;
	div.rn.f64 	%fd445, %fd324, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r295}, %fd445;
	}
	and.b32  	%r296, %r295, 2147483647;
	setp.ne.s32	%p117, %r296, 2146435072;
	@%p117 bra 	BB0_130;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r297, %temp}, %fd445;
	}
	setp.ne.s32	%p118, %r297, 0;
	@%p118 bra 	BB0_130;

	mov.f64 	%fd325, 0d0000000000000000;
	mul.rn.f64 	%fd445, %fd445, %fd325;

BB0_130:
	mul.f64 	%fd326, %fd445, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r511, %fd326;
	st.local.u32 	[%rd5], %r511;
	cvt.rn.f64.s32	%fd327, %r511;
	neg.f64 	%fd328, %fd327;
	fma.rn.f64 	%fd330, %fd328, %fd277, %fd445;
	fma.rn.f64 	%fd332, %fd328, %fd279, %fd330;
	fma.rn.f64 	%fd446, %fd328, %fd281, %fd332;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r298}, %fd445;
	}
	and.b32  	%r299, %r298, 2145386496;
	setp.lt.u32	%p119, %r299, 1105199104;
	@%p119 bra 	BB0_132;

	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd445;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd446, [retval0+0];
	
	//{
	}// Callseq End 7
	ld.local.u32 	%r511, [%rd5];

BB0_132:
	add.s32 	%r61, %r511, 1;
	and.b32  	%r300, %r61, 1;
	shl.b32 	%r301, %r300, 3;
	setp.eq.s32	%p120, %r300, 0;
	selp.f64	%fd334, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p120;
	add.s32 	%r302, %r301, 1;
	mul.wide.s32 	%rd110, %r302, 8;
	add.s64 	%rd112, %rd103, %rd110;
	ld.const.f64 	%fd335, [%rd112];
	mul.rn.f64 	%fd99, %fd446, %fd446;
	fma.rn.f64 	%fd336, %fd334, %fd99, %fd335;
	ld.const.f64 	%fd337, [%rd112+8];
	fma.rn.f64 	%fd338, %fd336, %fd99, %fd337;
	ld.const.f64 	%fd339, [%rd112+16];
	fma.rn.f64 	%fd340, %fd338, %fd99, %fd339;
	ld.const.f64 	%fd341, [%rd112+24];
	fma.rn.f64 	%fd342, %fd340, %fd99, %fd341;
	ld.const.f64 	%fd343, [%rd112+32];
	fma.rn.f64 	%fd344, %fd342, %fd99, %fd343;
	ld.const.f64 	%fd345, [%rd112+40];
	fma.rn.f64 	%fd100, %fd344, %fd99, %fd345;
	fma.rn.f64 	%fd447, %fd100, %fd446, %fd446;
	@%p120 bra 	BB0_134;

	mov.f64 	%fd346, 0d3FF0000000000000;
	fma.rn.f64 	%fd447, %fd100, %fd99, %fd346;

BB0_134:
	and.b32  	%r303, %r61, 2;
	setp.eq.s32	%p121, %r303, 0;
	@%p121 bra 	BB0_136;

	mov.f64 	%fd347, 0d0000000000000000;
	mov.f64 	%fd348, 0dBFF0000000000000;
	fma.rn.f64 	%fd447, %fd447, %fd348, %fd347;

BB0_136:
	cvt.rn.f32.f64	%f189, %fd447;
	st.global.f32 	[%rd168+8], %f189;
	add.s32 	%r62, %r57, 1;
	cvt.rn.f64.s32	%fd349, %r62;
	mul.f64 	%fd350, %fd349, 0d400921FB54442D18;
	div.rn.f64 	%fd449, %fd350, %fd27;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r304}, %fd449;
	}
	and.b32  	%r305, %r304, 2147483647;
	setp.ne.s32	%p122, %r305, 2146435072;
	@%p122 bra 	BB0_139;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r306, %temp}, %fd449;
	}
	setp.ne.s32	%p123, %r306, 0;
	@%p123 bra 	BB0_139;

	mov.f64 	%fd351, 0d0000000000000000;
	mul.rn.f64 	%fd449, %fd449, %fd351;

BB0_139:
	mul.f64 	%fd352, %fd449, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r512, %fd352;
	st.local.u32 	[%rd5], %r512;
	cvt.rn.f64.s32	%fd353, %r512;
	neg.f64 	%fd354, %fd353;
	fma.rn.f64 	%fd356, %fd354, %fd277, %fd449;
	fma.rn.f64 	%fd358, %fd354, %fd279, %fd356;
	fma.rn.f64 	%fd450, %fd354, %fd281, %fd358;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r307}, %fd449;
	}
	and.b32  	%r308, %r307, 2145386496;
	setp.lt.u32	%p124, %r308, 1105199104;
	@%p124 bra 	BB0_141;

	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd449;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd450, [retval0+0];
	
	//{
	}// Callseq End 8
	ld.local.u32 	%r512, [%rd5];

BB0_141:
	add.s32 	%r66, %r512, 1;
	and.b32  	%r309, %r66, 1;
	shl.b32 	%r310, %r309, 3;
	setp.eq.s32	%p125, %r309, 0;
	selp.f64	%fd360, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p125;
	add.s32 	%r311, %r310, 1;
	mul.wide.s32 	%rd114, %r311, 8;
	add.s64 	%rd116, %rd103, %rd114;
	ld.const.f64 	%fd361, [%rd116];
	mul.rn.f64 	%fd112, %fd450, %fd450;
	fma.rn.f64 	%fd362, %fd360, %fd112, %fd361;
	ld.const.f64 	%fd363, [%rd116+8];
	fma.rn.f64 	%fd364, %fd362, %fd112, %fd363;
	ld.const.f64 	%fd365, [%rd116+16];
	fma.rn.f64 	%fd366, %fd364, %fd112, %fd365;
	ld.const.f64 	%fd367, [%rd116+24];
	fma.rn.f64 	%fd368, %fd366, %fd112, %fd367;
	ld.const.f64 	%fd369, [%rd116+32];
	fma.rn.f64 	%fd370, %fd368, %fd112, %fd369;
	ld.const.f64 	%fd371, [%rd116+40];
	fma.rn.f64 	%fd113, %fd370, %fd112, %fd371;
	fma.rn.f64 	%fd451, %fd113, %fd450, %fd450;
	@%p125 bra 	BB0_143;

	mov.f64 	%fd372, 0d3FF0000000000000;
	fma.rn.f64 	%fd451, %fd113, %fd112, %fd372;

BB0_143:
	and.b32  	%r312, %r66, 2;
	setp.eq.s32	%p126, %r312, 0;
	@%p126 bra 	BB0_145;

	mov.f64 	%fd373, 0d0000000000000000;
	mov.f64 	%fd374, 0dBFF0000000000000;
	fma.rn.f64 	%fd451, %fd451, %fd374, %fd373;

BB0_145:
	add.s64 	%rd16, %rd168, 16;
	cvt.rn.f32.f64	%f190, %fd451;
	st.global.f32 	[%rd168+12], %f190;
	add.s32 	%r503, %r62, 1;
	setp.lt.s32	%p127, %r503, %r159;
	mov.u64 	%rd168, %rd16;
	@%p127 bra 	BB0_109;

BB0_146:
	ld.param.u32 	%r491, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_0];
	mul.wide.s32 	%rd117, %r159, 4;
	add.s64 	%rd118, %rd2, %rd117;
	mov.u32 	%r313, -1082130432;
	st.global.u32 	[%rd118], %r313;
	mov.u32 	%r69, %ntid.x;
	mov.u32 	%r314, %ctaid.x;
	mov.u32 	%r315, %tid.x;
	mad.lo.s32 	%r513, %r69, %r314, %r315;
	setp.ge.s32	%p128, %r513, %r491;
	@%p128 bra 	BB0_262;

	ld.param.u64 	%rd161, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_19];
	cvta.to.global.u64 	%rd17, %rd161;
	mov.u32 	%r316, %nctaid.x;
	mul.lo.s32 	%r71, %r316, %r69;
	cvt.rn.f64.s32	%fd119, %r159;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r72}, %fd119;
	}
	bfe.u32 	%r317, %r72, 20, 11;
	add.s32 	%r318, %r317, -1012;
	mov.b64 	 %rd119, %fd119;
	shl.b64 	%rd18, %rd119, %r318;
	and.b32  	%r73, %r72, 2147483647;
	shr.s32 	%r319, %r72, 31;
	and.b32  	%r320, %r319, -2146435072;
	add.s32 	%r74, %r320, 2146435072;
	or.b32  	%r75, %r74, -2147483648;
	shr.u32 	%r321, %r159, 31;
	add.s32 	%r322, %r159, %r321;
	shr.s32 	%r76, %r322, 1;
	mov.f64 	%fd375, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r77}, %fd375;
	}
	and.b32  	%r78, %r77, 2147483647;
	and.b32  	%r79, %r159, 3;
	setp.eq.s32	%p129, %r79, 2;
	selp.b32	%r323, 1, %r159, %p129;
	setp.ne.s32	%p130, %r79, 2;
	selp.b32	%r324, -1, 0, %p130;
	add.s32 	%r325, %r324, %r159;
	add.s32 	%r80, %r325, -1;
	mul.lo.s32 	%r81, %r325, %r323;
	and.b32  	%r82, %r157, 3;
	add.s64 	%rd19, %rd30, 12;
	bra.uni 	BB0_148;

BB0_256:
	setp.ne.s32	%p241, %r78, 2146435072;
	@%p241 bra 	BB0_257;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r468, %temp}, %fd375;
	}
	setp.ne.s32	%p242, %r468, 0;
	mov.f64 	%fd469, %fd179;
	@%p242 bra 	BB0_261;

	shr.s32 	%r469, %r151, 31;
	and.b32  	%r470, %r469, -2146435072;
	add.s32 	%r471, %r470, 2146435072;
	or.b32  	%r472, %r471, -2147483648;
	selp.b32	%r473, %r472, %r471, %p9;
	mov.u32 	%r474, 0;
	mov.b64 	%fd469, {%r474, %r473};
	bra.uni 	BB0_261;

BB0_177:
	and.b32  	%r351, %r102, 2147483647;
	setp.ne.s32	%p154, %r351, 2146435072;
	@%p154 bra 	BB0_178;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r352, %temp}, %fd120;
	}
	setp.ne.s32	%p155, %r352, 0;
	mov.f64 	%fd455, %fd127;
	@%p155 bra 	BB0_182;

	selp.b32	%r353, %r75, %r74, %p5;
	mov.u32 	%r354, 0;
	mov.b64 	%fd455, {%r354, %r353};
	bra.uni 	BB0_182;

BB0_257:
	mov.f64 	%fd469, %fd179;
	bra.uni 	BB0_261;

BB0_178:
	mov.f64 	%fd455, %fd127;
	bra.uni 	BB0_182;

BB0_148:
	div.s32 	%r85, %r513, %r158;
	mul.wide.s32 	%rd120, %r85, 4;
	add.s64 	%rd20, %rd4, %rd120;
	ld.global.f32 	%f38, [%rd20];
	mul.lo.s32 	%r86, %r85, %r158;
	mul.lo.s32 	%r87, %r85, %r157;
	@%p61 bra 	BB0_161;

	mul.wide.s32 	%rd121, %r87, 4;
	add.s64 	%rd21, %rd29, %rd121;
	mov.u32 	%r514, 0;

BB0_150:
	mov.f32 	%f264, 0f00000000;
	mul.lo.s32 	%r89, %r514, %r157;
	setp.lt.s32	%p132, %r157, 1;
	@%p132 bra 	BB0_160;

	mov.f32 	%f264, 0f00000000;
	mov.u32 	%r517, 0;
	setp.eq.s32	%p133, %r82, 0;
	@%p133 bra 	BB0_157;

	setp.eq.s32	%p134, %r82, 1;
	@%p134 bra 	BB0_156;

	setp.eq.s32	%p135, %r82, 2;
	@%p135 bra 	BB0_155;

	// inline asm
	ld.global.nc.f32 %f195, [%rd21];
	// inline asm
	mul.wide.s32 	%rd124, %r89, 4;
	add.s64 	%rd123, %rd30, %rd124;
	// inline asm
	ld.global.nc.f32 %f196, [%rd123];
	// inline asm
	fma.rn.f32 	%f264, %f195, %f196, 0f00000000;
	mov.u32 	%r517, 1;

BB0_155:
	add.s32 	%r331, %r517, %r87;
	mul.wide.s32 	%rd127, %r331, 4;
	add.s64 	%rd125, %rd29, %rd127;
	// inline asm
	ld.global.nc.f32 %f197, [%rd125];
	// inline asm
	add.s32 	%r332, %r517, %r89;
	mul.wide.s32 	%rd128, %r332, 4;
	add.s64 	%rd126, %rd30, %rd128;
	// inline asm
	ld.global.nc.f32 %f198, [%rd126];
	// inline asm
	fma.rn.f32 	%f264, %f197, %f198, %f264;
	add.s32 	%r517, %r517, 1;

BB0_156:
	add.s32 	%r333, %r517, %r87;
	mul.wide.s32 	%rd131, %r333, 4;
	add.s64 	%rd129, %rd29, %rd131;
	// inline asm
	ld.global.nc.f32 %f199, [%rd129];
	// inline asm
	add.s32 	%r334, %r517, %r89;
	mul.wide.s32 	%rd132, %r334, 4;
	add.s64 	%rd130, %rd30, %rd132;
	// inline asm
	ld.global.nc.f32 %f200, [%rd130];
	// inline asm
	fma.rn.f32 	%f264, %f199, %f200, %f264;
	add.s32 	%r517, %r517, 1;

BB0_157:
	setp.lt.u32	%p136, %r157, 4;
	@%p136 bra 	BB0_160;

	mul.wide.s32 	%rd169, %r517, 4;
	mul.lo.s32 	%r335, %r157, %r514;
	mul.wide.s32 	%rd133, %r335, 4;
	add.s64 	%rd23, %rd19, %rd133;

BB0_159:
	add.s64 	%rd134, %rd21, %rd169;
	// inline asm
	ld.global.nc.f32 %f201, [%rd134];
	// inline asm
	add.s64 	%rd141, %rd23, %rd169;
	add.s64 	%rd135, %rd141, -12;
	// inline asm
	ld.global.nc.f32 %f202, [%rd135];
	// inline asm
	fma.rn.f32 	%f209, %f201, %f202, %f264;
	add.s64 	%rd136, %rd134, 4;
	// inline asm
	ld.global.nc.f32 %f203, [%rd136];
	// inline asm
	add.s64 	%rd137, %rd141, -8;
	// inline asm
	ld.global.nc.f32 %f204, [%rd137];
	// inline asm
	fma.rn.f32 	%f210, %f203, %f204, %f209;
	add.s64 	%rd138, %rd134, 8;
	// inline asm
	ld.global.nc.f32 %f205, [%rd138];
	// inline asm
	add.s64 	%rd139, %rd141, -4;
	// inline asm
	ld.global.nc.f32 %f206, [%rd139];
	// inline asm
	fma.rn.f32 	%f211, %f205, %f206, %f210;
	add.s64 	%rd140, %rd134, 12;
	// inline asm
	ld.global.nc.f32 %f207, [%rd140];
	// inline asm
	// inline asm
	ld.global.nc.f32 %f208, [%rd141];
	// inline asm
	fma.rn.f32 	%f264, %f207, %f208, %f211;
	add.s64 	%rd169, %rd169, 16;
	add.s32 	%r517, %r517, 4;
	setp.lt.s32	%p137, %r517, %r157;
	@%p137 bra 	BB0_159;

BB0_160:
	mul.wide.s32 	%rd142, %r514, 4;
	add.s64 	%rd143, %rd3, %rd142;
	ld.global.f32 	%f212, [%rd143];
	ld.global.f32 	%f213, [%rd20];
	mul.f32 	%f214, %f213, %f212;
	div.rn.f32 	%f215, %f264, %f214;
	add.s32 	%r336, %r514, %r86;
	mul.wide.s32 	%rd144, %r336, 4;
	add.s64 	%rd145, %rd1, %rd144;
	st.global.f32 	[%rd145], %f215;
	add.s32 	%r514, %r514, 1;
	setp.lt.s32	%p138, %r514, %r158;
	@%p138 bra 	BB0_150;

BB0_161:
	rem.s32 	%r490, %r513, %r158;
	div.s32 	%r489, %r513, %r158;
	mul.lo.s32 	%r488, %r489, %r158;
	add.s32 	%r339, %r488, %r490;
	mul.wide.s32 	%rd146, %r339, 4;
	add.s64 	%rd26, %rd1, %rd146;
	ld.global.f32 	%f48, [%rd26];
	mov.u32 	%r520, 0;
	mov.u32 	%r519, 1;
	@%p87 bra 	BB0_165;

BB0_162:
	mul.wide.s32 	%rd147, %r519, 4;
	add.s64 	%rd148, %rd2, %rd147;
	ld.global.f32 	%f216, [%rd148];
	setp.gt.f32	%p140, %f48, %f216;
	@%p140 bra 	BB0_164;

	add.s32 	%r99, %r519, 1;
	setp.lt.s32	%p141, %r519, %r159;
	mov.u32 	%r519, %r99;
	@%p141 bra 	BB0_162;
	bra.uni 	BB0_165;

BB0_164:
	add.s32 	%r520, %r519, -1;

BB0_165:
	cvt.f64.f32	%fd120, %f48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r102}, %fd120;
	}
	abs.f64 	%fd121, %fd120;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd121;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd119;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd127, [retval0+0];
	
	//{
	}// Callseq End 9
	setp.lt.s32	%p142, %r102, 0;
	setp.eq.s64	%p143, %rd18, -9223372036854775808;
	and.pred  	%p5, %p142, %p143;
	@!%p5 bra 	BB0_167;
	bra.uni 	BB0_166;

BB0_166:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r341}, %fd127;
	}
	xor.b32  	%r342, %r341, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r343, %temp}, %fd127;
	}
	mov.b64 	%fd127, {%r343, %r342};

BB0_167:
	setp.eq.f32	%p144, %f48, 0f00000000;
	@%p144 bra 	BB0_170;
	bra.uni 	BB0_168;

BB0_170:
	setp.lt.s32	%p147, %r72, 0;
	selp.b32	%r344, %r102, 0, %p143;
	or.b32  	%r345, %r344, 2146435072;
	selp.b32	%r346, %r345, %r344, %p147;
	mov.u32 	%r347, 0;
	mov.b64 	%fd127, {%r347, %r346};
	bra.uni 	BB0_171;

BB0_168:
	setp.gt.s32	%p145, %r102, -1;
	@%p145 bra 	BB0_171;

	cvt.rzi.f64.f64	%fd376, %fd119;
	setp.neu.f64	%p146, %fd376, %fd119;
	selp.f64	%fd127, 0dFFF8000000000000, %fd127, %p146;

BB0_171:
	add.f64 	%fd455, %fd119, %fd120;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r348}, %fd455;
	}
	and.b32  	%r349, %r348, 2146435072;
	setp.ne.s32	%p149, %r349, 2146435072;
	@%p149 bra 	BB0_172;

	setp.gtu.f64	%p150, %fd121, 0d7FF0000000000000;
	@%p150 bra 	BB0_182;

	abs.f64 	%fd377, %fd119;
	setp.gtu.f64	%p151, %fd377, 0d7FF0000000000000;
	@%p151 bra 	BB0_182;

	setp.ne.s32	%p152, %r73, 2146435072;
	@%p152 bra 	BB0_177;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r350, %temp}, %fd119;
	}
	setp.eq.s32	%p153, %r350, 0;
	@%p153 bra 	BB0_181;
	bra.uni 	BB0_177;

BB0_181:
	setp.lt.s32	%p156, %r72, 0;
	setp.gt.f64	%p157, %fd121, 0d3FF0000000000000;
	selp.b32	%r355, 2146435072, 0, %p157;
	xor.b32  	%r356, %r355, 2146435072;
	selp.b32	%r357, %r356, %r355, %p156;
	setp.eq.f32	%p158, %f48, 0fBF800000;
	selp.b32	%r358, 1072693248, %r357, %p158;
	mov.u32 	%r359, 0;
	mov.b64 	%fd455, {%r359, %r358};
	bra.uni 	BB0_182;

BB0_172:
	mov.f64 	%fd455, %fd127;

BB0_182:
	setp.eq.f32	%p159, %f48, 0f3F800000;
	setp.eq.s32	%p160, %r159, 0;
	or.pred  	%p161, %p159, %p160;
	mul.f32 	%f217, %f48, %f48;
	mov.f32 	%f218, 0f3F800000;
	sub.f32 	%f49, %f218, %f217;
	cvt.rn.f32.f64	%f219, %fd455;
	cvt.f64.f32	%fd378, %f219;
	selp.f64	%fd466, 0d3FF0000000000000, %fd378, %p161;
	setp.lt.s32	%p162, %r159, 2;
	@%p162 bra 	BB0_247;

	cvt.f64.f32	%fd417, %f48;
	abs.f64 	%fd416, %fd417;
	cvt.f64.f32	%fd133, %f49;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r103}, %fd133;
	}
	abs.f64 	%fd134, %fd133;
	setp.gt.f64	%p163, %fd134, 0d3FF0000000000000;
	selp.b32	%r104, 2146435072, 0, %p163;
	xor.b32  	%r105, %r104, 2146435072;
	and.b32  	%r106, %r103, 2147483647;
	setp.gt.f64	%p164, %fd416, 0d3FF0000000000000;
	selp.b32	%r107, 2146435072, 0, %p164;
	xor.b32  	%r108, %r107, 2146435072;
	mov.u32 	%r521, 1;

BB0_184:
	mov.u32 	%r110, %r521;
	cvt.rn.f64.s32	%fd136, %r110;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r111}, %fd136;
	}
	bfe.u32 	%r361, %r111, 20, 11;
	add.s32 	%r362, %r361, -1012;
	mov.b64 	 %rd149, %fd136;
	shl.b64 	%rd27, %rd149, %r362;
	setp.eq.s64	%p165, %rd27, -9223372036854775808;
	mov.f64 	%fd379, 0d3FF0000000000000;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd379;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd136;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd141, [retval0+0];
	
	//{
	}// Callseq End 10
	setp.lt.s32	%p166, %r77, 0;
	and.pred  	%p6, %p166, %p165;
	@!%p6 bra 	BB0_186;
	bra.uni 	BB0_185;

BB0_185:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r363}, %fd141;
	}
	xor.b32  	%r364, %r363, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r365, %temp}, %fd141;
	}
	mov.b64 	%fd141, {%r365, %r364};

BB0_186:
	setp.gt.s32	%p167, %r77, -1;
	@%p167 bra 	BB0_188;

	cvt.rzi.f64.f64	%fd380, %fd136;
	setp.neu.f64	%p168, %fd380, %fd136;
	selp.f64	%fd141, 0dFFF8000000000000, %fd141, %p168;

BB0_188:
	add.f64 	%fd459, %fd136, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r366}, %fd459;
	}
	and.b32  	%r367, %r366, 2146435072;
	setp.ne.s32	%p169, %r367, 2146435072;
	@%p169 bra 	BB0_189;

	abs.f64 	%fd381, %fd136;
	setp.gtu.f64	%p170, %fd381, 0d7FF0000000000000;
	@%p170 bra 	BB0_198;

	and.b32  	%r368, %r111, 2147483647;
	setp.ne.s32	%p171, %r368, 2146435072;
	@%p171 bra 	BB0_193;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r369, %temp}, %fd136;
	}
	setp.eq.s32	%p172, %r369, 0;
	@%p172 bra 	BB0_197;
	bra.uni 	BB0_193;

BB0_197:
	mov.u32 	%r377, 1072693248;
	mov.u32 	%r378, 0;
	mov.b64 	%fd459, {%r378, %r377};
	bra.uni 	BB0_198;

BB0_189:
	mov.f64 	%fd459, %fd141;

BB0_198:
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd134;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd136;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd461, [retval0+0];
	
	//{
	}// Callseq End 11
	setp.lt.s32	%p175, %r103, 0;
	and.pred  	%p7, %p175, %p165;
	@!%p7 bra 	BB0_200;
	bra.uni 	BB0_199;

BB0_199:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r379}, %fd461;
	}
	xor.b32  	%r380, %r379, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r381, %temp}, %fd461;
	}
	mov.b64 	%fd461, {%r381, %r380};

BB0_200:
	setp.eq.f32	%p177, %f49, 0f00000000;
	@%p177 bra 	BB0_203;
	bra.uni 	BB0_201;

BB0_203:
	selp.b32	%r382, %r103, 0, %p165;
	or.b32  	%r383, %r382, 2146435072;
	setp.lt.s32	%p181, %r111, 0;
	selp.b32	%r384, %r383, %r382, %p181;
	mov.u32 	%r385, 0;
	mov.b64 	%fd461, {%r385, %r384};
	bra.uni 	BB0_204;

BB0_201:
	setp.gt.s32	%p178, %r103, -1;
	@%p178 bra 	BB0_204;

	cvt.rzi.f64.f64	%fd383, %fd136;
	setp.neu.f64	%p179, %fd383, %fd136;
	selp.f64	%fd461, 0dFFF8000000000000, %fd461, %p179;

BB0_204:
	add.f64 	%fd152, %fd133, %fd136;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r386}, %fd152;
	}
	and.b32  	%r387, %r386, 2146435072;
	setp.ne.s32	%p182, %r387, 2146435072;
	setp.gtu.f64	%p183, %fd134, 0d7FF0000000000000;
	or.pred  	%p184, %p182, %p183;
	selp.f64	%fd462, %fd461, %fd152, %p182;
	@%p184 bra 	BB0_213;

	abs.f64 	%fd384, %fd136;
	setp.gtu.f64	%p185, %fd384, 0d7FF0000000000000;
	mov.f64 	%fd462, %fd152;
	@%p185 bra 	BB0_213;

	and.b32  	%r388, %r111, 2147483647;
	setp.ne.s32	%p186, %r388, 2146435072;
	@%p186 bra 	BB0_208;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r389, %temp}, %fd136;
	}
	setp.eq.s32	%p187, %r389, 0;
	@%p187 bra 	BB0_212;
	bra.uni 	BB0_208;

BB0_212:
	setp.eq.f32	%p190, %f49, 0fBF800000;
	setp.lt.s32	%p191, %r111, 0;
	selp.b32	%r397, %r105, %r104, %p191;
	selp.b32	%r398, 1072693248, %r397, %p190;
	mov.u32 	%r399, 0;
	mov.b64 	%fd462, {%r399, %r398};
	bra.uni 	BB0_213;

BB0_193:
	setp.ne.s32	%p173, %r78, 2146435072;
	@%p173 bra 	BB0_194;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r370, %temp}, %fd375;
	}
	setp.ne.s32	%p174, %r370, 0;
	mov.f64 	%fd459, %fd141;
	@%p174 bra 	BB0_198;

	shr.s32 	%r371, %r111, 31;
	and.b32  	%r372, %r371, -2146435072;
	add.s32 	%r373, %r372, 2146435072;
	or.b32  	%r374, %r373, -2147483648;
	selp.b32	%r375, %r374, %r373, %p6;
	mov.u32 	%r376, 0;
	mov.b64 	%fd459, {%r376, %r375};
	bra.uni 	BB0_198;

BB0_208:
	setp.ne.s32	%p188, %r106, 2146435072;
	@%p188 bra 	BB0_209;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r390, %temp}, %fd133;
	}
	setp.ne.s32	%p189, %r390, 0;
	mov.f64 	%fd462, %fd461;
	@%p189 bra 	BB0_213;

	shr.s32 	%r391, %r111, 31;
	and.b32  	%r392, %r391, -2146435072;
	add.s32 	%r393, %r392, 2146435072;
	or.b32  	%r394, %r393, -2147483648;
	selp.b32	%r395, %r394, %r393, %p7;
	mov.u32 	%r396, 0;
	mov.b64 	%fd462, {%r396, %r395};
	bra.uni 	BB0_213;

BB0_194:
	mov.f64 	%fd459, %fd141;
	bra.uni 	BB0_198;

BB0_209:
	mov.f64 	%fd462, %fd461;

BB0_213:
	cvt.f64.f32	%fd412, %f48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r479}, %fd412;
	}
	setp.lt.s32	%p246, %r479, 0;
	setp.eq.s32	%p192, %r110, 0;
	selp.f64	%fd385, 0d3FF0000000000000, %fd459, %p192;
	setp.eq.f32	%p193, %f49, 0f3F800000;
	or.pred  	%p194, %p193, %p192;
	selp.f64	%fd386, 0d3FF0000000000000, %fd462, %p194;
	mul.f64 	%fd157, %fd385, %fd386;
	fma.rn.f64 	%fd158, %fd136, 0dC000000000000000, %fd119;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r112}, %fd158;
	}
	bfe.u32 	%r400, %r112, 20, 11;
	add.s32 	%r401, %r400, -1012;
	mov.b64 	 %rd150, %fd158;
	shl.b64 	%rd28, %rd150, %r401;
	setp.eq.s64	%p195, %rd28, -9223372036854775808;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd121;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd158;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd464, [retval0+0];
	
	//{
	}// Callseq End 12
	and.pred  	%p8, %p246, %p195;
	@!%p8 bra 	BB0_215;
	bra.uni 	BB0_214;

BB0_214:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r402}, %fd464;
	}
	xor.b32  	%r403, %r402, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r404, %temp}, %fd464;
	}
	mov.b64 	%fd464, {%r404, %r403};

BB0_215:
	setp.eq.f32	%p247, %f48, 0f00000000;
	@%p247 bra 	BB0_218;
	bra.uni 	BB0_216;

BB0_218:
	selp.b32	%r405, %r102, 0, %p195;
	or.b32  	%r406, %r405, 2146435072;
	setp.lt.s32	%p201, %r112, 0;
	selp.b32	%r407, %r406, %r405, %p201;
	mov.u32 	%r408, 0;
	mov.b64 	%fd464, {%r408, %r407};
	bra.uni 	BB0_219;

BB0_216:
	setp.gt.s32	%p198, %r102, -1;
	@%p198 bra 	BB0_219;

	cvt.rzi.f64.f64	%fd387, %fd158;
	setp.neu.f64	%p199, %fd387, %fd158;
	selp.f64	%fd464, 0dFFF8000000000000, %fd464, %p199;

BB0_219:
	add.f64 	%fd165, %fd120, %fd158;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r409}, %fd165;
	}
	and.b32  	%r410, %r409, 2146435072;
	setp.ne.s32	%p202, %r410, 2146435072;
	setp.gtu.f64	%p203, %fd121, 0d7FF0000000000000;
	or.pred  	%p204, %p202, %p203;
	selp.f64	%fd465, %fd464, %fd165, %p202;
	@%p204 bra 	BB0_228;

	abs.f64 	%fd388, %fd158;
	setp.gtu.f64	%p205, %fd388, 0d7FF0000000000000;
	mov.f64 	%fd465, %fd165;
	@%p205 bra 	BB0_228;

	and.b32  	%r411, %r112, 2147483647;
	setp.ne.s32	%p206, %r411, 2146435072;
	@%p206 bra 	BB0_223;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r412, %temp}, %fd158;
	}
	setp.eq.s32	%p207, %r412, 0;
	@%p207 bra 	BB0_227;
	bra.uni 	BB0_223;

BB0_227:
	cvt.f64.f32	%fd415, %f48;
	abs.f64 	%fd414, %fd415;
	setp.gt.f64	%p248, %fd414, 0d3FF0000000000000;
	selp.b32	%r482, 2146435072, 0, %p248;
	setp.eq.f32	%p210, %f48, 0fBF800000;
	setp.lt.s32	%p211, %r112, 0;
	selp.b32	%r420, %r108, %r482, %p211;
	selp.b32	%r421, 1072693248, %r420, %p210;
	mov.u32 	%r422, 0;
	mov.b64 	%fd465, {%r422, %r421};
	bra.uni 	BB0_228;

BB0_223:
	cvt.f64.f32	%fd413, %f48;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r481}, %fd413;
	}
	and.b32  	%r480, %r481, 2147483647;
	setp.ne.s32	%p208, %r480, 2146435072;
	@%p208 bra 	BB0_224;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r413, %temp}, %fd120;
	}
	setp.ne.s32	%p209, %r413, 0;
	mov.f64 	%fd465, %fd464;
	@%p209 bra 	BB0_228;

	shr.s32 	%r414, %r112, 31;
	and.b32  	%r415, %r414, -2146435072;
	add.s32 	%r416, %r415, 2146435072;
	or.b32  	%r417, %r416, -2147483648;
	selp.b32	%r418, %r417, %r416, %p8;
	mov.u32 	%r419, 0;
	mov.b64 	%fd465, {%r419, %r418};
	bra.uni 	BB0_228;

BB0_224:
	mov.f64 	%fd465, %fd464;

BB0_228:
	setp.eq.f32	%p249, %f48, 0f3F800000;
	setp.eq.f64	%p212, %fd158, 0d0000000000000000;
	or.pred  	%p214, %p249, %p212;
	selp.f64	%fd389, 0d3FF0000000000000, %fd465, %p214;
	mul.f64 	%fd170, %fd157, %fd389;
	mov.u32 	%r540, 1;
	mov.u32 	%r529, %r540;
	@%p87 bra 	BB0_236;

	mov.u32 	%r527, 1;
	mov.u32 	%r529, 0;
	setp.eq.s32	%p216, %r79, 0;
	@%p216 bra 	BB0_230;
	bra.uni 	BB0_231;

BB0_230:
	mov.u32 	%r528, %r159;
	bra.uni 	BB0_234;

BB0_231:
	setp.eq.s32	%p217, %r79, 1;
	mov.u32 	%r523, %r159;
	@%p217 bra 	BB0_233;

	mov.u32 	%r527, %r81;
	mov.u32 	%r523, %r80;

BB0_233:
	add.s32 	%r528, %r523, -1;
	mul.lo.s32 	%r527, %r523, %r527;
	mov.u32 	%r529, %r527;

BB0_234:
	setp.lt.u32	%p218, %r159, 4;
	@%p218 bra 	BB0_236;

BB0_235:
	mul.lo.s32 	%r427, %r528, %r527;
	add.s32 	%r428, %r528, -1;
	mul.lo.s32 	%r429, %r427, %r428;
	add.s32 	%r430, %r528, -2;
	mul.lo.s32 	%r431, %r429, %r430;
	add.s32 	%r432, %r528, -3;
	mul.lo.s32 	%r527, %r431, %r432;
	add.s32 	%r528, %r528, -4;
	setp.gt.s32	%p219, %r528, 0;
	mov.u32 	%r529, %r527;
	@%p219 bra 	BB0_235;

BB0_236:
	cvt.rn.f64.s32	%fd390, %r529;
	mul.f64 	%fd171, %fd170, %fd390;
	shl.b32 	%r125, %r110, 1;
	setp.lt.s32	%p220, %r110, 1;
	mov.u32 	%r532, %r540;
	@%p220 bra 	BB0_239;

	bfe.s32 	%r434, %r110, 0, 1;
	and.b32  	%r435, %r110, 1;
	setp.eq.b32	%p221, %r435, 1;
	not.pred 	%p222, %p221;
	add.s32 	%r436, %r125, -1;
	mul.lo.s32 	%r437, %r125, %r436;
	selp.b32	%r530, 1, %r437, %p222;
	add.s32 	%r438, %r125, -2;
	selp.b32	%r531, %r125, %r438, %p222;
	and.b32  	%r532, %r434, %r437;
	setp.lt.u32	%p223, %r125, 4;
	@%p223 bra 	BB0_239;

BB0_238:
	mul.lo.s32 	%r439, %r531, %r530;
	add.s32 	%r440, %r531, -1;
	mul.lo.s32 	%r441, %r439, %r440;
	add.s32 	%r442, %r531, -2;
	mul.lo.s32 	%r443, %r441, %r442;
	add.s32 	%r444, %r531, -3;
	mul.lo.s32 	%r530, %r443, %r444;
	add.s32 	%r531, %r531, -4;
	setp.gt.s32	%p224, %r531, 0;
	mov.u32 	%r532, %r530;
	@%p224 bra 	BB0_238;

BB0_239:
	sub.s32 	%r134, %r159, %r125;
	setp.lt.s32	%p225, %r134, 1;
	@%p225 bra 	BB0_246;

	and.b32  	%r135, %r134, 3;
	setp.eq.s32	%p226, %r135, 0;
	mov.u32 	%r540, 0;
	mov.u32 	%r538, 1;
	mov.u32 	%r539, %r134;
	@%p226 bra 	BB0_244;

	setp.eq.s32	%p227, %r135, 1;
	mov.u32 	%r533, 1;
	mov.u32 	%r534, %r134;
	@%p227 bra 	BB0_243;

	setp.eq.s32	%p228, %r135, 2;
	selp.b32	%r449, 1, %r134, %p228;
	setp.ne.s32	%p229, %r135, 2;
	selp.b32	%r450, -1, 0, %p229;
	add.s32 	%r451, %r450, %r134;
	add.s32 	%r534, %r451, -1;
	mul.lo.s32 	%r533, %r451, %r449;

BB0_243:
	add.s32 	%r539, %r534, -1;
	mul.lo.s32 	%r538, %r534, %r533;
	mov.u32 	%r540, %r538;

BB0_244:
	setp.lt.u32	%p230, %r134, 4;
	@%p230 bra 	BB0_246;

BB0_245:
	mul.lo.s32 	%r452, %r539, %r538;
	add.s32 	%r453, %r539, -1;
	mul.lo.s32 	%r454, %r452, %r453;
	add.s32 	%r455, %r539, -2;
	mul.lo.s32 	%r456, %r454, %r455;
	add.s32 	%r457, %r539, -3;
	mul.lo.s32 	%r538, %r456, %r457;
	add.s32 	%r539, %r539, -4;
	setp.gt.s32	%p231, %r539, 0;
	mov.u32 	%r540, %r538;
	@%p231 bra 	BB0_245;

BB0_246:
	mul.lo.s32 	%r458, %r540, %r532;
	cvt.rn.f64.s32	%fd391, %r458;
	div.rn.f64 	%fd392, %fd171, %fd391;
	add.f64 	%fd393, %fd466, %fd392;
	add.s32 	%r521, %r110, 1;
	cvt.rn.f32.f64	%f220, %fd393;
	cvt.f64.f32	%fd466, %f220;
	setp.lt.s32	%p232, %r110, %r76;
	@%p232 bra 	BB0_184;

BB0_247:
	cvt.rn.f64.s32	%fd174, %r520;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r151}, %fd174;
	}
	bfe.u32 	%r459, %r151, 20, 11;
	add.s32 	%r460, %r459, -1012;
	mov.b64 	 %rd151, %fd174;
	shl.b64 	%rd152, %rd151, %r460;
	setp.eq.s64	%p233, %rd152, -9223372036854775808;
	mov.f64 	%fd394, 0d3FF0000000000000;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd394;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd174;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd179, [retval0+0];
	
	//{
	}// Callseq End 13
	setp.lt.s32	%p234, %r77, 0;
	and.pred  	%p9, %p234, %p233;
	@!%p9 bra 	BB0_249;
	bra.uni 	BB0_248;

BB0_248:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r461}, %fd179;
	}
	xor.b32  	%r462, %r461, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r463, %temp}, %fd179;
	}
	mov.b64 	%fd179, {%r463, %r462};

BB0_249:
	setp.gt.s32	%p235, %r77, -1;
	@%p235 bra 	BB0_251;

	cvt.rzi.f64.f64	%fd395, %fd174;
	setp.neu.f64	%p236, %fd395, %fd174;
	selp.f64	%fd179, 0dFFF8000000000000, %fd179, %p236;

BB0_251:
	add.f64 	%fd469, %fd174, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r464}, %fd469;
	}
	and.b32  	%r465, %r464, 2146435072;
	setp.ne.s32	%p237, %r465, 2146435072;
	@%p237 bra 	BB0_252;

	abs.f64 	%fd396, %fd174;
	setp.gtu.f64	%p238, %fd396, 0d7FF0000000000000;
	@%p238 bra 	BB0_261;

	and.b32  	%r466, %r151, 2147483647;
	setp.ne.s32	%p239, %r466, 2146435072;
	@%p239 bra 	BB0_256;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r467, %temp}, %fd174;
	}
	setp.eq.s32	%p240, %r467, 0;
	@%p240 bra 	BB0_260;
	bra.uni 	BB0_256;

BB0_260:
	mov.u32 	%r475, 1072693248;
	mov.u32 	%r476, 0;
	mov.b64 	%fd469, {%r476, %r475};
	bra.uni 	BB0_261;

BB0_252:
	mov.f64 	%fd469, %fd179;

BB0_261:
	div.s32 	%r487, %r513, %r158;
	rem.s32 	%r486, %r513, %r158;
	mul.lo.s32 	%r485, %r487, %r158;
	add.s32 	%r484, %r485, %r486;
	mul.wide.s32 	%rd165, %r484, 4;
	add.s64 	%rd164, %rd1, %rd165;
	mul.wide.s32 	%rd163, %r487, 4;
	ld.param.u32 	%r483, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_0];
	ld.param.u64 	%rd162, [_Z28LargeMarginSoftmaxCudaKernelIfEvN10tensorflow16CudaLaunchConfigEPKT_S4_PKiS6_iiiffffibPfS7_S7_S7_S7_PS2__param_4];
	setp.eq.s32	%p243, %r520, 0;
	selp.f64	%fd398, 0d3FF0000000000000, %fd469, %p243;
	mul.f64 	%fd399, %fd466, %fd398;
	shl.b32 	%r478, %r520, 1;
	cvt.rn.f64.s32	%fd400, %r478;
	sub.f64 	%fd401, %fd399, %fd400;
	cvt.rn.f32.f64	%f221, %fd401;
	add.s64 	%rd153, %rd162, %rd163;
	// inline asm
	ld.global.nc.s32 %r477, [%rd153];
	// inline asm
	setp.eq.s32	%p244, %r477, %r486;
	mul.wide.s32 	%rd155, %r486, 4;
	add.s64 	%rd156, %rd3, %rd155;
	ld.global.f32 	%f222, [%rd156];
	mul.f32 	%f223, %f38, %f222;
	cvt.f64.f32	%fd402, %f223;
	ld.global.f32 	%f224, [%rd41];
	ld.global.f32 	%f225, [%rd164];
	mul.f32 	%f226, %f225, %f224;
	cvt.f64.f32	%fd403, %f226;
	cvt.f64.f32	%fd404, %f224;
	add.f64 	%fd405, %fd404, 0d3FF0000000000000;
	div.rn.f64 	%fd406, %fd403, %fd405;
	cvt.f64.f32	%fd407, %f221;
	selp.f64	%fd408, %fd407, 0d0000000000000000, %p244;
	div.rn.f64 	%fd409, %fd408, %fd405;
	add.f64 	%fd410, %fd406, %fd409;
	mul.f64 	%fd411, %fd402, %fd410;
	cvt.rn.f32.f64	%f227, %fd411;
	mul.wide.s32 	%rd158, %r513, 4;
	add.s64 	%rd159, %rd17, %rd158;
	st.global.f32 	[%rd159], %f227;
	add.s32 	%r513, %r513, %r71;
	setp.lt.s32	%p245, %r513, %r483;
	@%p245 bra 	BB0_148;

BB0_262:
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot1[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%rd100, __local_depot1;
	cvta.local.u64 	%SP, %rd100;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd38, %SP, 0;
	cvta.to.local.u64 	%rd1, %rd38;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB1_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd93, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd92, %rd1;
	@%p2 bra 	BB1_4;

	mov.b64 	 %rd41, %fd4;
	shl.b64 	%rd42, %rd41, 11;
	or.b64  	%rd3, %rd42, -9223372036854775808;
	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd43, %r25, 8;
	mov.u64 	%rd44, __cudart_i2opi_d;
	add.s64 	%rd88, %rd44, %rd43;
	mov.u64 	%rd93, 0;
	mov.u64 	%rd92, %rd1;
	mov.u64 	%rd90, %rd1;
	mov.u32 	%r39, %r5;

BB1_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd88];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd3;    
	mov.b64         {clo,chi}, %rd93;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd93, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd90], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd90, %rd1, %rd50;
	add.s64 	%rd92, %rd92, 8;
	add.s64 	%rd88, %rd88, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB1_3;

BB1_4:
	st.local.u64 	[%rd92], %rd93;
	ld.local.u64 	%rd94, [%rd1+16];
	ld.local.u64 	%rd95, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB1_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd95, %r9;
	shr.u64 	%rd52, %rd94, %r28;
	or.b64  	%rd95, %rd51, %rd52;
	shl.b64 	%rd53, %rd94, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd94, %rd55, %rd53;

BB1_6:
	shr.u64 	%rd56, %rd95, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd94, 62;
	shl.b64 	%rd58, %rd95, 2;
	or.b64  	%rd97, %rd58, %rd57;
	shl.b64 	%rd96, %rd94, 2;
	shr.u64 	%rd59, %rd95, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	st.u32 	[%rd37], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB1_8;

	mov.u64 	%rd63, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd63;
	mov.b64         {a2,a3}, %rd63;
	mov.b64         {b0,b1}, %rd96;
	mov.b64         {b2,b3}, %rd97;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd96, {r0,r1};
	mov.b64         %rd97, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB1_8:
	clz.b64 	%r41, %rd97;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB1_10;

	shl.b64 	%rd66, %rd97, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd67, %rd96, %r36;
	or.b64  	%rd97, %rd67, %rd66;

BB1_10:
	mov.u64 	%rd71, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd97;   
	mov.b64         {blo,bhi}, %rd71;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd68, {r0,r1};     
	mov.b64         %rd99, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd99, 1;
	@%p8 bra 	BB1_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd68;
	mov.b64         {a2,a3}, %rd99;
	mov.b64         {b0,b1}, %rd68;
	mov.b64         {b2,b3}, %rd99;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd72, {r0,r1};
	mov.b64         %rd99, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB1_12:
	cvt.u64.u32	%rd78, %r40;
	shl.b64 	%rd79, %rd78, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd80, %r38;
	shl.b64 	%rd81, %rd80, 52;
	add.s64 	%rd82, %rd99, 1;
	shr.u64 	%rd83, %rd82, 10;
	add.s64 	%rd84, %rd83, 1;
	shr.u64 	%rd85, %rd84, 1;
	add.s64 	%rd86, %rd85, %rd81;
	or.b64  	%rd87, %rd86, %rd79;
	mov.b64 	 %fd4, %rd87;

BB1_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32	%p1, %r51, 0;
	@%p1 bra 	BB2_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

BB2_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB2_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

BB2_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd16, %fd15;
	neg.f64 	%fd17, %fd15;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd16, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd16, %fd16;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd79, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd80, {%r27, %r26};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd18;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB2_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB2_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

BB2_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.ne.s32	%p7, %r46, 2146435072;
	@%p7 bra 	BB2_9;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32	%p8, %r47, 0;
	@%p8 bra 	BB2_10;

BB2_9:
	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

BB2_10:
	st.param.f64	[func_retval0+0], %fd136;
	ret;
}


